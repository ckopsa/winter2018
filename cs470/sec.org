#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+TITLE: Computer Security
#+DATE: <2018-01-20 Sat>
#+AUTHOR: Colton Kopsa
#+EMAIL: Aghbac@Aghbac.local
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.3.1 (Org mode 9.1.6)

* OSI Model
  - Application - Generates and consumes network messages

  - Presentation - Governs how a message is encoded by the application before
    being sent on the network
  
  - Session - Provides a connection between individual messages between parties
    so a conversation can exist
  
  - Transport - Ensures the messages traveling across the network arrive intact
    and using the minimum amount of resources
  
  - Network - Handles routing of data-grams from the source host to the
    destination host
  
  - Data-link - Is the means by which data passes between adjacent entities on
    the network. Node-to-node
  
  - Physical - medium
  
* Attackers Advantage
  - Unknown attacks
  - Defend all points - choose weakest point
  - Strike at will
  - Play dirty
* Direct Script Injection
  - Scripting Functionality
  - Malicious Code
  - Victim Opens the Document
* Reflected Script Injection
  - Create the Payload
  - Insert Payload Onto Host
  - Victim visits infected site
  - Exploitation
* DONE Ponder 02: Analysis [3/3]
  CLOSED: [2018-01-20 Sat 14:46] DEADLINE: <2018-01-20 Sat>
  - [X] Add sources to each of the individual sections with references
  - [X] Format to look nice
  - [X] Turn In and CC Partners
* DONE Prepare 03 : Reading and Quiz
  CLOSED: [2018-01-23 Tue 11:40] DEADLINE: <2018-01-23 Tue>
** DONE Reading [5/5]
   CLOSED: [2018-01-23 Tue 11:40]
   The reading for this week will include one long chapter from the textbook and
   four additional articles.
*** DONE Software Weapons
    CLOSED: [2018-01-22 Mon 22:12]
    Please familiarize yourself with the various types of software weapons. Note
    that the classification scheme presented here is not mutually-exclusive;
    some software weapons belong to more than one type. After reading this
    chapter, you should be able to recite the types of software weapons,
    enumerate the properties, and classify a given software weapon.
*** DONE The Internet Worm Program: An Analysis
    CLOSED: [2018-01-23 Tue 11:39]
    Another classic work. The most interesting thing here is the investigation
    that was conducted. You do not need to read the entire article, but you may
    choose to.

    E. Spafford. "The Internet Worm Program: An Analysis", ACM SIGCOMM Computer
    Communication Review Homepage archive, Volume 19 Issue 1, Jan. 1989, pp
    17-57 [Online] Available: http://dl.acm.org/citation.cfm?id=66095
*** DONE Reflections on Trusting Trust
    CLOSED: [2018-01-23 Tue 11:39]
    This very short article describes how to create an invisible virus.

    K. Thompson. "Reflections on Trusting Trust", Communications of the ACM
    CACM Homepage archive, Volume 27 Issue 8, Aug 1984, pp 761-763 [Online]
    Available: http://dl.acm.org/citation.cfm?id=358210
*** DONE The Zombie Roundup
    CLOSED: [2018-01-23 Tue 11:39]
    This paper does a good job of describing botnets.

    E. Cooke et al. "The Zombie Roundup: Understanding, Detecting, and
    Disrupting Botnets", SRUTI'05 Proceedings, pp 6-6 [Online] Available:
    https://www.usenix.org/legacy/event/sruti05/tech/full_papers/cooke/cooke.pdf
*** DONE The Anatomy of a Large-Scale Hypertextual Web Search Engine
    CLOSED: [2018-01-23 Tue 11:14]
    If there ever was a paper that was required reading for any technical
    professional, this one is it! You may find the authors of this paper
    familiar. If not, you certainly will know about the company they started
    based on this technology. If not, you should "Google it>"

**** DONE Notes
     CLOSED: [2018-01-23 Tue 11:14]

     S. Brin & L. Page. "The Anatomy of a Large-Scale Hypertextual Web Search
     Engine", WWW7 Proceedings of the seventh international conference on World
     Wide Web 7 archive, pp 107-117 [Online] Available:
     https://doi.org/10.1016/S0169-7552(98)00110-X
** DONE Quiz
   CLOSED: [2018-01-23 Tue 11:40]
   As with last week, don't forget to take the quiz. The highest score will be
   the recorded score.
* DONE Ponder 03: Malware Research
  CLOSED: [2018-01-28 Sun 21:01] DEADLINE: <2018-01-27 Sat>
  Identify a recent malware outbreak. Find three sources and write a "one page"
  report of the malware. Additionally, read another's report, find an additional
  source, and make a "meaningful contribution" to the report.
** DONE Initial Report
   CLOSED: [2018-01-28 Sun 21:01]
   First, choose a recent malware outbreak. This could be anything within the past
   half-decade or so. Please do not choose anything from last century. Usually
   students do best when they choose a topic that is interesting to them.

   Find three sources describing the outbreak. These should be secondary or primary
   sources only. If you are unsure if a source is secondary or preliminary, check
   the qualifications of the author. If the author's job description is "staff
   writer," he or she is probably not a recognized expert. On the other hand, if
   the article is published in a peer-reviewed journal such as IEEE or ACM, then it
   is at least a secondary source.

   Finally, write a "one page" report of the malware. Make sure the report is fully
   cited. Also make sure the grammar and spelling are professional. There should be
   no first-person ("I") or second-person ("you") in the article. Please refer to
   the Scholarly Writing page for details.

   Your post will be graded according to the following scale:
   - 50pt: "There is nothing to add," the writing is "professional"
   - 45pt: All the requirements are met. Great sources coupled with an essay how the information from the source contributes to the issues in the discussion
   - 35pt: One flaw in the report: grammatical or spelling mistake, weak source, key point missing, or problems with the writing quality
   - 25pt: Serious problem with the report: grammatical or spelling errors making the article difficult to read, poor or missing sources, opinions, off-base comments, comments with factual errors, or major parts of the malware outbreak are not discussed
   - 0pt: Article missing or does not demonstrate a significant amount of effort on the part of the author

*** References
    Mattei, T. A. (2017). News: Privacy, Confidentiality, and Security of Health
    Care Information: Lessons from the Recent WannaCry Cyberattack. World
    Neurosurgery, 104972-974. doi:10.1016/j.wneu.2017.06.104

    Patterson, O. D., Werbaneth, P., Bickford, J. P., & Radloff, S. (2017).
    Guest Editorial Special Section on the 2016 SEMI Advanced Semiconductor
    Manufacturing Conference. IEEE Transactions On Semiconductor Manufacturing,
    30(4), 377. doi:10.1109/TSM.2017.2757298

    Zimba, A., Wang, Z., & Chen, H. (2017). Multi-stage crypto ransomware
    attacks: A new emerging cyber threat to critical infrastructure and
    industrial control systems. ICT Express, doi:10.1016/j.icte.2017.12.007
** TODO Meaningful Contribution
   Please also read the report of a classmate. Find at least one additional source
   and make a "meaningful contribution" to the report. This component will be
   graded the same as the initial report:
   - 50pt: The contribution is "outstanding"
   - 45pt: All the requirements are met. Great sources coupled with an essay how the information from the source contributes to the issues in the discussion
   - 35pt: One flaw in the report: grammatical or spelling mistake, weak source, key point missing, or problems with the writing quality
   - 25pt: Serious problem with the report: grammatical or spelling errors making the article difficult to read, poor or missing sources, opinions, off-base comments, comments with factual errors, or major parts of the malware outbreak are not discussed
   - 0pt: Article missing or does not demonstrate a significant amount of effort on the part of the author

* DONE Prepare 04 : Reading
  CLOSED: [2018-01-30 Tue 08:36] DEADLINE: <2018-01-30 Tue>
  [[https://content.byui.edu/file/2390954c-eadb-4592-aa96-5a29275f9404/1/Prepare/470.04.Prepare.html][Assignment]]
* DONE Ponder 04 : Sanitization Program
  CLOSED: [2018-01-30 Tue 08:36] DEADLINE: <2018-02-03 Sat>
  [[https://content.byui.edu/file/2390954c-eadb-4592-aa96-5a29275f9404/1/Ponder/470.04.Lab.html][Assignment]] 
* DONE Prove : Research Paper
  CLOSED: [2018-02-02 Fri 11:34] DEADLINE: <2018-02-03 Sat>
  [[https://content.byui.edu/file/2390954c-eadb-4592-aa96-5a29275f9404/1/Ponder/470.04.ResearchTopic.html][Assignment]] 
* DONE Prepare 05 : Reading
  CLOSED: [2018-02-06 Tue 12:44] SCHEDULED: <2018-02-06 Tue> DEADLINE: <2018-02-06 Tue>
  [[https://content.byui.edu/file/2390954c-eadb-4592-aa96-5a29275f9404/1/Prepare/470.05.Prepare.html][Assignment]]
* DONE Ponder 05 : Stack Manipulation
  CLOSED: [2018-02-08 Thu 10:16] SCHEDULED: <2018-02-07 Wed> DEADLINE: <2018-02-10 Sat>
  [[https://content.byui.edu/file/2390954c-eadb-4592-aa96-5a29275f9404/1/Ponder/470.05.Lab.html][Assignment]] 
* DONE Prove 05 : Research Paper
  CLOSED: [2018-02-08 Thu 10:16] SCHEDULED: <2018-02-08 Thu> DEADLINE: <2018-02-10 Sat>
  [[https://content.byui.edu/file/2390954c-eadb-4592-aa96-5a29275f9404/1/Ponder/470.05.ResearchSources.html][Assignment]]
  
  - [[https://github.com/revolutionary/zergRush/blob/master/zergRush.c][Zerg Rush]] 
  - [[https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3874][CVE ID]] 
  - [[https://issuetracker.google.com/issues/36935122][Google Android Issue]] 
  - [[http://www.openwall.com/lists/oss-security/2011/11/10/1][Zerg Rush Email Chain]] 
  - [[https://cwe.mitre.org/data/definitions/416.html][Use After Free Explanation]]  
  - [[file:Security%20for%20Software%20Engineers%201.39.07%20PM.pdf::%25PDF-1.5][Stack Smashing - Helfrich]] 
* DONE Prepare 06 : Reading and Quiz
  CLOSED: [2018-02-13 Tue 08:42] SCHEDULED: <2018-02-13 Tue> DEADLINE: <2018-02-13 Tue>
  The reading for this week will include one chapter from the textbook and three
  additional articles.

** TODO Chapter 06: Memory Injection
   The vast majority of all malware spreads by exploiting memory injection
   vulnerabilities. In the early days of software development, it was common for
   software engineers to be ignorant of these vulnerabilities and accept that
   they inevitably exist in the code. Those days are past. Now it is not
   uncommon for someone to lose their job because they introduced a memory
   injection vulnerability. Therefore, every software engineer has to be very
   good at identifying and fixing these vulnerabilities

** TODO The Rising Threat of Vulnerabilities Due to Integer Errors
   More detail into overflow and underflow vulnerabilities.

   D. Ahmad, "The Rising Threat of Vulnerabilities Due to Integer Errors", IEEE
   Security and Privacy archive, Volume 1 Issue 4, July 2003, pp 77-82 [Online]
   Available: https://doi.org/10.1109/MSECP.2003.1219077

** TODO Smashing C++ VPTRS
   This article goes into a great deal of detail as to how classes are
   implemented in C++. This degree of detail is required in order to understand
   and exploit a vulnerability.

   Rix, "Smashing C++ VPTRS", Phrack, 1, May. 2000, Volume 10, Issue 56 [Online]
   Available: http://phrack.org/issues/56/8.html#article

** TODO Smashing The Stack For Fun And Profit
   Another must-read for all computer science or software engineering majors.
   This can get very dense. Focus on the part before the Shell Code section.

   Aleph One. "Smashing The Stack For Fun And Profit", Phrack, 08, Nov. 1996,
   Volume 7, Issue 49
* DONE Prove 06 : Rough Draft
  CLOSED: [2018-02-19 Mon 10:04] SCHEDULED: <2018-02-13 Tue> DEADLINE: <2018-02-17 Sat>
  Write the rough draft of your research paper. A couple things to pay special attention to:

  - Thesis: The main point or thesis of your paper should be clearly stated.
    This thesis should imply or directly state what exactly you are trying to
    teach the reader.
  - Development: How are you going to organize the information you have learned
    from the articles? Pay particular attention to how ideas are developed. Is
    there an obvious flow where each paragraph leads into the next?
  - Completeness: Is the thesis completely covered? Did this paper accomplish
    what it set out to do as stated in the thesis?
  - Citations: Make sure that every source is cited. If this were a master's
    thesis or a PhD. dissertation, then every single sentence will have at least
    one citation. Clearly we do not need to be that rigorous, but it should be
    close!
  - Tables, Graphs, and Figures: If you need to add tables, graphs, and/or
    figures to your paper to make it more understandable, a draft of these
    should be completed this week. You probably do not want to copy-paste a
    graph or figure directly from your source (if you do, make sure to cite
    it!). Instead, you will probably want to adapt it to your own paper so it
    fits into the flow better. In other words, a table, graph, or figure added
    to your paper should fit in with the text of the paper so it feels like an
    extension of your writing rather than something slapped together.

  There is no formal submission this week. That being said, you should have a
  rough draft of your paper completed by the end of the week.
* TODO Ponder 06 : Vulnerabilities & Exploits
  SCHEDULED: <2018-02-13 Tue> DEADLINE: <2018-02-24 Sat>
  [[https://content.byui.edu/file/2390954c-eadb-4592-aa96-5a29275f9404/1/Ponder/470.06.Lab.html][Assignment]]
  
* TODO Prepare 08 : Reading and Quiz
  SCHEDULED: <2018-02-19 Mon> DEADLINE: <2018-02-20 Tue>
  - [ ] Chapter 08 : Threat Mitigation

  As with last week, don't forget to take the quiz. The highest score will be
  the recorded score.

* TODO Ponder 07 : Threat Model
  SCHEDULED: <2018-02-22 Thu> DEADLINE: <2018-02-24 Sat>
  The purpose of this assignment is to demonstrate proficiency in all the steps
  in threat modeling. This is a group assignment; you will work with same group
  you use for the problem sets for online students. In order to get full credit
  for this assignment, you need to demonstrate proficiency in each of the steps.

  Threat model the following program available on Linux:
  /home/cs470/week07/bed.cpp

  The file is also available here: bed.html. Assignment

  You will work with the same small group you use to work through the problem
  sets. Though this is a group project, grades will be awarded individually.
  This means that there must be "abundant evidence" that everyone on the team
  has participated in all aspects of the project.

  There are three components:

  - Asset List: What assets are to be protected by the program?
  - Data Flow Diagram: You will need to include every instance of data
    communication as well as all processes. It might be necessary to drill down
    two or three levels depending on how much detail you put on each level.
  - Threat List: Come up with a list of threats. Additionally, create one
    "complete threat" for each member of the team. A "complete threat" includes:
** Component Description
   - Asset Completely and concisely describe what the threat is about.
   - Threat Category Include all parts of the McCumber model: the protection
     mechanism, the state, and the S.T.R.I.D.E. component.
   - Risk Compute the risk (think D.R.E.A.D.). Also include a brief justification
     for your values.
   - Mitigation Some idea how the threat is to be mitigated.
   - Comments Anything else that may be relevant.

   A couple pointers:

   - The best groups meet a couple times to work on this project together.
   - Double-check each other's work. This helps ensure that you understand the
     concepts as well as helping your friends get the highest possible score.
   - Clearly annotate who did what. If the grader can't tell you worked on part
     of the problem, you probably will not get points!
   - If you draw your DFD on a white board, either transcribe it to paper or take
     a picture.

   Please submit all the group's work as a single PDF document. This is done by
   e-mailing the professor directly. You might need to take a picture of your DFD
   to do this. The grading is:

* TODO 5. Reviewing a Paper
  SCHEDULED: <2018-02-22 Thu> DEADLINE: <2018-02-24 Sat>
  [[https://content.byui.edu/file/2390954c-eadb-4592-aa96-5a29275f9404/1/Ponder/470.07.ResearchReview.html][Assignment]]
  Once you have selected a topic, reply to the post with the subject "Review."
  Since there can be only one review per paper, you need to make sure that a
  "Review" reply does not currently exist on the post. You can "claim" a post at
  any time, even if you will not get around to reviewing the paper until later in
  the week.

  Your review should focus on the following points:

  Sources: Are the sources Primary or Secondary? Is there enough information
  in the summaries to tell? Summaries: Were the main points pulled out of the
  sources and described in the summaries? Completeness: Does the paper cover
  all the angles of the topic as reported in the sources? Writing: Can you
  easily follow the author's thoughts?

  Your review should cover all these points. Give high-level feedback (ex: Your
  second sources is preliminary, you need to find a better source), do not
  re-write the paper. Grades will be awarded according to how well the defects in
  the final paper were discovered and described by the reviewer.
* TODO Prove 08 : Midterm Part I
  SCHEDULED: <2018-02-24 Sat> DEADLINE: <2018-02-27 Tue>

  A security-aware software engineer needs to not only write secure code, he
  also needs to be conversant in the fundamental principles of the discipline.
  In other words, it is necessary to know the definition of key terms, explain
  important principles, and recite key facts. This may seem counter-intuitive in
  the modern age of information ubiquity. However, can you really be an
  effective programmer if you are constantly looking up the syntax of language
  constructs? Security is much the same way. Some facts need to be on the "tip
  of the tongue."

  The first part of the midterm will focus on the facts and comprehension part of
  Computer Security. You will be asked to list, define, and explain many of the
  fundamental principles of the class. The questions for the midterm will be drawn
  from the questions at the end of each chapter in the reading. Most of these
  questions we have seen before in one form or another in the preparation quizzes
  or the problem sets.

  You may take the midterm any time before the due-date. Once you begin taking the
  test, you will have 30 minutes to complete it. In order to receive full credit,
  each essay question needs to be about 100 words to fully explain the
  answer/solution. While this may not seem like a lot, you will need to go quickly
  to finish on time.

  This test is closed-book. You may not look on the internet, your notes, or the
  textbook for any of the answers. That being said, we will rely on the honor
  system to enforce this.

  Tips for maximizing your score on the test:

  Review all the preparation quizzes and problems sets for Unit 0 Introduction
  to Computer Security, Unit 1 Attack Vectors, and Unit 2 Code Hardening. Make
  sure you fully understand the answer for each. Try to identify the most
  likely items that will be on the test. For each of these, practice typing
  your answer to each question many times. The more times you practice each
  response, the more likely that you will have time left over to work through
  the unexpected questions. Do not panic when taking the test. Make sure you
  answer the questions you know first. Come back later for the ones that
  caught you off guard.
