#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+TITLE: ch2 - I/O Systems
#+DATE: <2018-01-10 Wed>
#+AUTHOR: Colton Kopsa
#+EMAIL: Aghbac@Aghbac.local
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.3.1 (Org mode 9.1.6)

* Homework 2 [5/6]
** DONE 1.	(4) List six services provided by an operating system that are designed to make it more convenient for users to use the computer system.
   CLOSED: [2018-01-19 Fri 15:03]
   1. User Interface
   2. Error Detection
   3. File Systems
   4. Program Execution
   5. I/O Operations
   6. Communication
*** DONE Explain why it is not desirous to have the user level provide low-level file-system manipulation services that an operating system typically provides.
    CLOSED: [2018-01-19 Fri 15:14]
    Because the user doesn't have a full understanding of the uses of the
    kernel, they may accidently make an irreversible mistake. Instead, it would
    be better to only allow the user to do safe actions.
** DONE 2.	(2) What are the three general methods that are used for passing parameters to the operating system when a user's process makes a system call?
   CLOSED: [2018-01-19 Fri 14:59]
   1. Pass parameters in registers.
   2. Push parameters to the stack
   3. Store parameters in a block in memory and pass the address as the parameter
** DONE 3.	(3) What is the purpose of the command interpreter?
   CLOSED: [2018-01-19 Fri 14:55]
   It allows users to directly enter commands to be performed by the operating
   system.
*** DONE Why is it usually separate from the kernel?
    CLOSED: [2018-01-19 Fri 14:55]
    It is usually not part of the kernel since the command interpreter is
    subject to changes.
*** DONE Would it be possible for the user to develop a new command interpreter using the system-call interface provided by the operating system?
    CLOSED: [2018-01-19 Fri 14:56]
    Because you can create and manage processes and communicate between things
    from system calls, you could definitely make a new command interpreter.
    
** DONE 4.	(3) What are the two models of interprocess communication?
   CLOSED: [2018-01-19 Fri 14:47]
   Shared Memory and Message Passing
*** DONE What are the strengths and weaknesses of the two approaches?
    CLOSED: [2018-01-19 Fri 14:47]
    Message passing is useful for exchanging smaller amounts of data, because no
    conflicts need be avoided. It is also easier to implement. However, it is
    slow and is for smaller data exchanges.

    Shared Memory has the speed and size of main memory; however, it has
    problems relating to security and synchronization.
** DONE 5.	(4.5) What are the advantages of the microkernel approach to system design?
   CLOSED: [2018-01-19 Fri 14:49]
   It is smaller and easier to manage.
*** DONE How do user programs and system services interact in a microkernel architecture?
    CLOSED: [2018-01-19 Fri 14:48]
    Message passing
*** DONE What are the disadvantages of using the microkernel approach?
    CLOSED: [2018-01-19 Fri 14:48]
    The performance of mircokernels can suffer due to increased system-function
    overhead.
** TODO 6.	(2.5) What is the purpose of system calls, and how do system calls relate to the OS and to the concept of dual-mode (kernel mode and user mode) operation?
   The purp
